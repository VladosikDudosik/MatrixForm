<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAdAAAAWwAAAFUAAABWAAAAVwAAAFAAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAUAAA
        AFcAAABWAAAAVQAAAFsAAAAdAAAAAAAAAAEAAAAEAAAAAAAAAFYAAAD/AAAA/AAAAP4AAAD/AAAA7gAA
        ABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAADuAAAA/wAAAP4AAAD8AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVQAAAP8AAAD4AAAA/QAA
        AP8AAADuAAAAEQAAAAAAAAABAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAABAAA
        AAUAAAAAAAAAEQAAAO4AAAD/AAAA/QAAAPgAAAD/AAAAVQAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAA
        AP8AAACOAAAATAAAAFIAAAAGAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAAUgAAAEwAAACOAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAFUAAAAAAAAABAAAAAAAAAABAAAAAAAAAEIAAABCAAAAAAAAAAEAAAAAAAAAAQAA
        AAAAAAAeAAAAXwAAAFMAAABeAAAAPAAAAAAAAAAFAAAAAAAAAFUAAAD/AAAA/wAAAFYAAAAAAAAABAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAWAAAAAAAAAAHAAAAAgAAAAAAAACTAAAA/wAAAP8AAACTAAAAAAAA
        AAIAAAAEAAAAAAAAAFUAAAD/AAAA+AAAAP8AAACoAAAAAAAAAAoAAAAAAAAAWAAAAP8AAAD/AAAAVgAA
        AAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAYAAAAAAAAAPgAAAP8AAABFAAAARQAA
        AP8AAAA+AAAAAAAAAAMAAAAAAAAAAQAAABwAAAD5AAAAYwAAAAAAAAADAAAABAAAAAAAAABWAAAA/wAA
        AP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAACAAAAAAAAACUAAAA3AAA
        AAAAAAAAAAAA3AAAAJQAAAAAAAAABAAAAAEAAAAAAAAADgAAAP0AAABaAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAHAAAAAAAA
        ALQAAAC8AAAAAAAAAAAAAAC9AAAAtAAAAAAAAAADAAAAAQAAAAAAAAAQAAAA/QAAAFsAAAAAAAAABAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAA
        AAcAAAAAAAAApQAAAMwAAAAAAAAAAAAAAMwAAAClAAAAAAAAAAQAAAABAAAAAAAAAA8AAAD9AAAAWgAA
        AAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAA
        AFYAAAAAAAAABwAAAAAAAABfAAAA/wAAABQAAAAVAAAA/wAAAF8AAAAAAAAABAAAAAAAAAATAAAAHwAA
        APYAAABZAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAA
        AP8AAAD/AAAAVgAAAAAAAAAEAAAAAAAAAAYAAADSAAAA5QAAAOUAAADSAAAABgAAAAAAAAAEAAAAAAAA
        AFgAAAD6AAAA/wAAAFgAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAA
        AAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAABAAAAAAAAABgAAACfAAAAnwAAABgAAAAAAAAAAQAA
        AAEAAAAAAAAABQAAAHAAAAC6AAAANwAAAAAAAAACAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAA
        AAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAwAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFYAAAD/AAAA/wAA
        AFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAQAAAAAAAAAVgAA
        AP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAADAAAAAAAA
        AD8AAADEAAAApAAAAL8AAAB8AAAAAAAAAAQAAAAAAAAAGAAAAJ8AAACfAAAAGAAAAAAAAAABAAAABAAA
        AAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAA
        AAMAAAAAAAAAPQAAAMgAAAD5AAAA3gAAAHYAAAAAAAAAAQAAAAYAAADSAAAA5QAAAOUAAADSAAAABgAA
        AAAAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAA
        AAAAAAAEAAAAAAAAAAEAAAAAAAAADgAAAPkAAABYAAAAAAAAAAcAAAAAAAAAXwAAAP8AAAAVAAAAFQAA
        AP8AAABfAAAAAAAAAAcAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAA
        AP8AAABWAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAARAAAA/QAAAFwAAAAAAAAABwAAAAAAAAClAAAAzAAA
        AAAAAAAAAAAAzAAAAKUAAAAAAAAABwAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAAAAAABAAAAAAAAABEAAAD9AAAAWgAAAAAAAAAHAAAAAAAA
        ALQAAAC8AAAAAAAAAAAAAAC9AAAAtAAAAAAAAAAHAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAAAAAAAAEAAAAAAAAADgAAAP0AAABaAAAAAAAA
        AAgAAAAAAAAAlAAAANwAAAAAAAAAAAAAANwAAACUAAAAAAAAAAgAAAAAAAAAVgAAAP8AAAD/AAAAVgAA
        AAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAQAAAACAAAAAAAAADYAAABfAAAA8wAA
        AFoAAAAAAAAABgAAAAAAAAA+AAAA/wAAAEUAAABFAAAA/wAAAD4AAAAAAAAABgAAAAAAAABWAAAA/wAA
        AP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFgAAAAAAAAABwAAAAMAAAAAAAAARgAA
        AP8AAAD/AAAAVgAAAAAAAAAEAAAAAgAAAAAAAACTAAAA/wAAAP8AAACTAAAAAAAAAAIAAAAHAAAAAAAA
        AFgAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVQAAAAAAAAAEAAAAAAAA
        AAEAAAAAAAAAIQAAAF4AAAAcAAAAAAAAAAEAAAAAAAAAAQAAAAAAAABCAAAAQgAAAAAAAAABAAAAAAAA
        AAQAAAAAAAAAVQAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAACOAAAATAAA
        AFIAAAAGAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAgAA
        AAAAAAAGAAAAUgAAAEwAAACOAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFUAAAD/AAAA+AAA
        AP0AAAD/AAAA7gAAABEAAAAAAAAAAQAAAAIAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAMAAAABAAAAAAAAABEAAADuAAAA/wAAAP0AAAD4AAAA/wAAAFUAAAAAAAAABAAAAAQAAAAAAAAAVgAA
        AP8AAAD8AAAA/gAAAP8AAADuAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAO4AAAD/AAAA/gAAAPwAAAD/AAAAVgAAAAAAAAAEAAAAAQAA
        AAAAAAAdAAAAWwAAAFUAAABWAAAAVwAAAFAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAUAAAAFcAAABWAAAAVQAAAFsAAAAdAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAAAQAAAAAAAAAAQF/6Av////9AX/oCQF/6AkBCQgJAWXoCQgBBQkJCQUJCgQJCQpkiQkKZ
        IkJCmSJCQoFCQkKBQkJCQkJCQplDQkLOmUJCQUJCQkEBQkKigUJCIplCQiKZQkKimUJCQoFCQkJCQkIi
        AEJASpoCQEJCAkBf+gJAX/oC/////0Bf+gI=
</value>
  </data>
</root>